/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.managerapp.OrderPopups;

import com.mycompany.managerapp.LeftPanelSocket;
import com.mycompany.managerapp.ManagerApp;
import com.mycompany.managerapp.Utility.APIs;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import okhttp3.Call;
import okhttp3.MediaType;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.RequestBody;
import okhttp3.Response;
import okio.ByteString;
import org.json.JSONException;
import org.json.JSONObject;

/**
 *
 * @author Kapil
 */
public class BulkClosingFrame extends javax.swing.JDialog {

    /**
     * Creates new form BulkClosingFrame
     */
    ArrayList<String> symbolList = new ArrayList<>();

    public BulkClosingFrame() {
        initComponents();
        this.setSize(600, 500);
        setModal(true);
        setLocationRelativeTo(null);
        // System.out.println("LeftPanelSocket.watchlistData: " + LeftPanelSocket.watchlistData);
        DefaultComboBoxModel symbolComboboxModal = new DefaultComboBoxModel();
        symbolComboboxModal.addElement("All");
        try {
            for (JSONObject jso : LeftPanelSocket.watchlistData) {
                symbolList.add(jso.getString("Symbol"));
                symbolComboboxModal.addElement(jso.getString("Symbol"));
            }
        } catch (JSONException ex) {
            System.out.println("exception occurred while extracting the Symbol value to display in BUlk Closing frame");
        }

        jComboBox1.setModel(symbolComboboxModal);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jButton3.setText("Close");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel1.setText("Symbol:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton2.setText("Close");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel5.setText("order type:");

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sell", "Buy" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jComboBox1, 0, 218, Short.MAX_VALUE)
                    .addComponent(jComboBox4, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE))
                .addContainerGap(57, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jLabel5)
                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(359, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        OkHttpClient client = new OkHttpClient();

        JSONObject jsonBOdy = new JSONObject();
        String selectedSymbol = jComboBox1.getSelectedItem().toString();
        if (selectedSymbol == "All") {
            try {
                JSONObject requestBody = new JSONObject();
                requestBody.put("managerId", ManagerApp.managerId);
                RequestBody body = RequestBody.create(MediaType.parse("application/json"), requestBody.toString());
                Request req = new Request.Builder().url(APIs.BULK_CLOSING).post(body).build();
                Call call = client.newCall(req);
                try {
                    Response res = call.execute();
                    if (res.isSuccessful()) {
                        System.out.println("res.body: " + res.body().string());
                        JOptionPane.showMessageDialog(this, "All position closed");
                    }
                } catch (IOException e) {
                    System.out.println("exception occurred while executing the api of bulk closing all position in bulkClosingFrame");
                }

                return;
            } catch (JSONException ex) {
                System.out.println("exception occurred while closing all position in bulk closing frame");
            }
        }
        try {
            jsonBOdy.put("symbol", selectedSymbol);
            jsonBOdy.put("managerId", ManagerApp.managerId);
            System.out.println("jsonBOdy: " + jsonBOdy);
            RequestBody body = RequestBody.create(MediaType.parse("application/json"), jsonBOdy.toString());
            Request req = new Request.Builder().url(APIs.BULK_CLOSING_BY_SYMBOL).post(body).build();

            Call call = client.newCall(req);
            try {
                Response res = call.execute();
                System.out.println("bulk close response : " + res.body().string());
                if (res.isSuccessful()) {
                    JOptionPane.showMessageDialog(this, "Bulk Closed");
                }
            } catch (IOException ex) {
                System.out.println("exception occurred while executing the request of bulk closing in bulk closing frame");
            }

        } catch (JSONException e) {

        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        JSONObject requestBody = new JSONObject();
        try {
            requestBody.put("type", jComboBox4.getSelectedIndex());
            requestBody.put("managerId", ManagerApp.managerId);
            RequestBody body = RequestBody.create(MediaType.parse("application/json"), requestBody.toString());
            Request req = new Request.Builder().url(APIs.BULK_CLOSING_ORDER_TYPE).post(body).build();

            OkHttpClient client = new OkHttpClient();
            Call newCall = client.newCall(req);
            try {
                Response res = newCall.execute();
                System.out.println("res.body: " + res.body().string());
                if (res.isSuccessful()) {
                    JOptionPane.showMessageDialog(this, "Positions closed");
                }
            } catch (IOException e) {
                System.out.println("exception occurred while executing the new Call");
                System.out.println(e);
            }

        } catch (JSONException ex) {
            System.out.println("exception occurred while creating json");
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BulkClosingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BulkClosingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BulkClosingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BulkClosingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BulkClosingFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    // End of variables declaration//GEN-END:variables
}
